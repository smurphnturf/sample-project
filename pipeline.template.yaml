AWSTemplateFormatVersion: '2010-09-09'
Description: >
  (qs-1ph8nehb7) 
  Serverless CICD Quick Start
  Codepipeline shared resources and security

Parameters:
  RepoName: # Provided by pipeline maker lambda in shared-deployments from sns trigger
    Description: Repo name passed by the pipeline maker lambda
    Type: String
    Default: sample-project
  DevAwsAccountId: # Provided by pipeline maker lambda in shared-deployments from default env variables
    Description: AWS account ID for development account
    Type: String
    AllowedPattern: (\d{12}|^$)
    ConstraintDescription: Must be an AWS account ID
    Default: '293952095306'
  ProdAwsAccountId: # Provided by pipeline maker lambda in shared-deployments from default env variables
    Description: AWS account ID for production account
    Type: String
    AllowedPattern: (\d{12}|^$)
    ConstraintDescription: Must be an AWS account ID
    Default: '040536061213'
  Branch:  # Provided by pipeline maker lambda in shared-deployments from sns trigger
    Description: Repository branch name
    Type: String
    Default: master
  Suffix: # calculated in pipeline make lambda based on branch name
    Description: Repository branch name (adapted to use in CloudFormation stack name)
    Type: String
    Default: master
  ArtifactBucket: # Provided by pipeline maker lambda in shared-deployments from default env variables
    Description: Artifact S3 bucket
    Type: String
  ArtifactBucketKeyArn: # Provided by pipeline maker lambda in shared-deployments from default env variables
    Description: ARN of the artifact bucket KMS key
    Type: String
  PipelineServiceRoleArn: # Provided by pipeline maker lambda in shared-deployments from default env variables
    Description: Pipeline service role ARN
    Type: String
  SamTranslationBucket: # Provided by pipeline maker lambda in shared-deployments from default env variables
    Description: S3 bucket for SAM translations
    Type: String
  DynamicPipelineCleanupLambdaArn: # Provided by pipeline maker lambda in shared-deployments from default env variables
    Description: ARN of Lambda function to clean up dynamic pipeline
    Type: String
  SecretArnDev: # Provided by project.template.yaml output CustomData
    Description: ARN for Secrets Manager secret for dev
    Type: String
    Default: ''
  SecretArnProd: # Provided by project.template.yaml output CustomData
    Description: ARN for Secrets Manager secret for production
    Type: String
    Default: ''
  SecretsManagerKey: # Provided by project.template.yaml output CustomData
    Description: KMS key for the use of secrets across accounts
    Type: String
    Default: ''

Conditions:
  IsProdStage: !Equals [ !Ref Branch, 'master' ]

Resources:
  PipelineNotificationsTopic:
    Condition: IsProdStage
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub ${Branch}-notifications-${AWS::Region}

  DynamicPipelineCleanupDev:
    Type: "AWS::CloudFormation::CustomResource"
    Version: '1.0'
    Properties:
      ServiceToken: !Ref DynamicPipelineCleanupLambdaArn
      RoleArn: !Sub arn:aws:iam::${DevAwsAccountId}:role/CodePipelineServiceRole-${AWS::Region}-${DevAwsAccountId}-dev
      Region: !Ref AWS::Region
      StackName:
        !If
          - IsProdStage
          - !Sub ${Branch}-dev
          - !Sub ${Branch}-dev-${Suffix}

  DynamicPipelineCleanupProd:
    Condition: IsProdStage
    Type: "AWS::CloudFormation::CustomResource"
    Version: '1.0'
    Properties:
      ServiceToken: !Ref DynamicPipelineCleanupLambdaArn
      RoleArn: !Sub arn:aws:iam::${ProdAwsAccountId}:role/CodePipelineServiceRole-${AWS::Region}-${ProdAwsAccountId}-prod
      Region: !Ref AWS::Region
      StackName: !Sub ${Branch}-prod

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !Ref PipelineServiceRoleArn
      Stages:
        - Name: Source
          Actions:
            - Name: GithubSourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                Owner: 'smurphnturf'
                Repo: !Ref RepoName
                Branch: !Ref Branch
                OAuthToken: '{{resolve:secretsmanager:poc-github-personal-access-token-code-build}}'
              OutputArtifacts:
                - Name: Source 
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              RunOrder: 1
              InputArtifacts:
                - Name: Source
              ActionTypeId:
                Category: Build
                Provider: CodeBuild
                Owner: AWS
                Version: '1'
              Configuration:
                ProjectName: !Ref BuildProject
              OutputArtifacts:
                - Name: BuildArtifact
        - Name: DeployToDev
          Actions:
            - Name: CreateChangeSet
              RunOrder: 1
              InputArtifacts:
                - Name: BuildArtifact
              ActionTypeId:
                Category: Deploy
                Provider: CloudFormation
                Owner: AWS
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM
                ChangeSetName: !Sub ${Branch}-change-set-${Suffix}
                RoleArn: !Sub arn:aws:iam::${DevAwsAccountId}:role/CodePipelineDeploymentRole-${AWS::Region}-${DevAwsAccountId}-dev
                StackName:
                  !If
                    - IsProdStage
                    - !Sub ${Branch}-dev
                    - !Sub ${Branch}-dev-${Suffix}
                TemplatePath: BuildArtifact::sample-transformed.yaml
                TemplateConfiguration: BuildArtifact::sample-configuration-dev.json
              RoleArn: !Sub arn:aws:iam::${DevAwsAccountId}:role/CodePipelineServiceRole-${AWS::Region}-${DevAwsAccountId}-dev
            - Name: DeployChangeSet
              RunOrder: 2
              ActionTypeId:
                Category: Deploy
                Provider: CloudFormation
                Owner: AWS
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: CAPABILITY_IAM
                ChangeSetName: !Sub ${Branch}-change-set-${Suffix}
                RoleArn: !Sub arn:aws:iam::${DevAwsAccountId}:role/CodePipelineDeploymentRole-${AWS::Region}-${DevAwsAccountId}-dev
                StackName:
                  !If
                    - IsProdStage
                    - !Sub ${Branch}-dev
                    - !Sub ${Branch}-dev-${Suffix}
              RoleArn: !Sub arn:aws:iam::${DevAwsAccountId}:role/CodePipelineServiceRole-${AWS::Region}-${DevAwsAccountId}-dev
            - Name: SmokeTest
              RunOrder: 4
              InputArtifacts:
                - Name: Source
              ActionTypeId:
                Category: Build
                Provider: CodeBuild
                Owner: AWS
                Version: '1'
              Configuration:
                ProjectName: !Ref SmokeTestDevProject
        - !If
          - IsProdStage
          - Name: DeployToProd
            Actions:
              - Name: CreateChangeSet
                RunOrder: 1
                InputArtifacts:
                  - Name: BuildArtifact
                ActionTypeId:
                  Category: Deploy
                  Provider: CloudFormation
                  Owner: AWS
                  Version: '1'
                Configuration:
                  ActionMode: CHANGE_SET_REPLACE
                  Capabilities: CAPABILITY_IAM
                  ChangeSetName: !Sub ${Branch}-change-set
                  RoleArn: !Sub arn:aws:iam::${ProdAwsAccountId}:role/CodePipelineDeploymentRole-${AWS::Region}-${ProdAwsAccountId}-prod
                  StackName:
                     !Sub ${Branch}-prod
                  TemplatePath: BuildArtifact::sample-transformed.yaml
                  TemplateConfiguration: BuildArtifact::sample-configuration-prod.json
                RoleArn: !Sub arn:aws:iam::${ProdAwsAccountId}:role/CodePipelineServiceRole-${AWS::Region}-${ProdAwsAccountId}-prod
              - Name: Approval
                RunOrder: 2
                ActionTypeId:
                  Category: Approval
                  Provider: Manual
                  Owner: AWS
                  Version: '1'
                Configuration:
                  NotificationArn: !Ref PipelineNotificationsTopic
                  # ExternalEntityLink: "http://example.com"
                  # CustomData: "The latest changes include feedback from Bob."
              - Name: DeployChangeSet
                RunOrder: 3
                ActionTypeId:
                  Category: Deploy
                  Provider: CloudFormation
                  Owner: AWS
                  Version: '1'
                Configuration:
                  ActionMode: CHANGE_SET_EXECUTE
                  Capabilities: CAPABILITY_IAM
                  ChangeSetName: !Sub ${Branch}-change-set
                  RoleArn: !Sub arn:aws:iam::${ProdAwsAccountId}:role/CodePipelineDeploymentRole-${AWS::Region}-${ProdAwsAccountId}-prod
                  StackName: !Sub ${Branch}-prod
                RoleArn: !Sub arn:aws:iam::${ProdAwsAccountId}:role/CodePipelineServiceRole-${AWS::Region}-${ProdAwsAccountId}-prod
              - Name: SmokeTest
                RunOrder: 5
                InputArtifacts:
                  - Name: Source
                ActionTypeId:
                  Category: Build
                  Provider: CodeBuild
                  Owner: AWS
                  Version: '1'
                Configuration:
                  ProjectName: !Ref SmokeTestProdProject
          - !Ref AWS::NoValue
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
        EncryptionKey:
          Id: !Ref ArtifactBucketKeyArn
          Type: KMS

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.build.yaml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: SAM_BUCKET
            Value: !Ref SamTranslationBucket
          - Name: SECRET_ARN_DEV
            Value: !Ref SecretArnDev
          - Name: SECRET_ARN_PROD
            Value: !Ref SecretArnProd
          - Name: SECRET_MANAGER_KEY
            Value: !Ref SecretsManagerKey
      ServiceRole: !Ref PipelineServiceRoleArn
      EncryptionKey: !Ref ArtifactBucketKeyArn

  SmokeTestDevProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.smoketest.yaml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: STACK_NAME
            Type: PLAINTEXT
            Value:
              !If
                - IsProdStage
                - !Sub ${Branch}-dev
                - !Sub ${Branch}-dev-${Suffix}
          - Name: ROLE_ARN
            Type: PLAINTEXT
            Value: !Sub arn:aws:iam::${DevAwsAccountId}:role/CodePipelineServiceRole-${AWS::Region}-${DevAwsAccountId}-dev
      ServiceRole: !Ref PipelineServiceRoleArn

  SmokeTestProdProject:
    Condition: IsProdStage
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.smoketest.yaml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: STACK_NAME
            Type: PLAINTEXT
            Value: !Sub ${Branch}-prod
          - Name: ROLE_ARN
            Type: PLAINTEXT
            Value: !Sub arn:aws:iam::${ProdAwsAccountId}:role/CodePipelineServiceRole-${AWS::Region}-${ProdAwsAccountId}-prod
      ServiceRole: !Ref PipelineServiceRoleArn

Outputs:
  PipelineNotificationTopic:
    Condition: IsProdStage
    Description: Notification SNS ARN for shared pipeline notificiations
    Value: !Ref PipelineNotificationsTopic
    Export:
      Name: !Sub ${AWS::StackName}-PipelineNotificationTopic
  PipelineNotificationTopicName:
    Condition: IsProdStage
    Description: Repo activity notifications topic name
    Value: !GetAtt PipelineNotificationsTopic.TopicName
    Export:
      Name: !Sub ${AWS::StackName}-PipelineNotificationTopicName
  DevAccountId:
    Condition: IsProdStage
    Description: AWS account ID for dev that was passed in as a parameter
    Value: !Ref DevAwsAccountId
    Export:
      Name: !Sub ${Branch}-DevAwsAccountId
  ProdAccountId:
    Condition: IsProdStage
    Description: AWS account ID for prod that was passed in as a parameter
    Value: !Ref ProdAwsAccountId
    Export:
      Name: !Sub ${Branch}-ProdAwsAccountId
